webpackJsonp([37117205163913],{4183:function(e,t){e.exports={data:{challengeNode:{title:"Understand Absolute versus Relative Units",description:["The last several challenges all set an element's margin or padding with pixels (<code>px</code>). Pixels are a type of length unit, which is what tells the browser how to size or space an item. In addition to <code>px</code>, CSS has a number of different length unit options that you can use.","The two main types of length units are absolute and relative. Absolute units tie to physical units of length. For example, <code>in</code> and <code>mm</code> refer to inches and millimeters, respectively. Absolute length units approximate the actual measurement on a screen, but there are some differences depending on a screen's resolution.","Relative units, such as <code>em</code> or <code>rem</code>, are relative to another length value. For example, <code>em</code> is based on the size of an element's font. If you use it to set the <code>font-size</code> property itself, it's relative to the parent's <code>font-size</code>.","<strong>Note</strong><br>There are several relative unit options that are tied to the size of the viewport. They are covered in the Responsive Web Design Principles section.","<hr>","Add a <code>padding</code> property to the element with class <code>red-box</code> and set it to <code>1.5em</code>."],challengeType:0,fields:{slug:"/responsive-web-design/basic-css/understand-absolute-versus-relative-units",blockName:"Basic CSS",tests:[{text:"Your <code>red-box</code> class should have a <code>padding</code> property.",testString:"assert($('.red-box').css('padding-top') != '0px' && $('.red-box').css('padding-right') != '0px' && $('.red-box').css('padding-bottom') != '0px' && $('.red-box').css('padding-left') != '0px', 'Your <code>red-box</code> class should have a <code>padding</code> property.');"},{text:"Your <code>red-box</code> class should give elements 1.5em of <code>padding</code>.",testString:"assert(code.match(/\\.red-box\\s*?{\\s*?.*?\\s*?.*?\\s*?padding:\\s*?1\\.5em/gi), 'Your <code>red-box</code> class should give elements 1.5em of <code>padding</code>.');"}]},required:[],files:{indexhtml:{key:"indexhtml",ext:"html",name:"index",contents:'<style>\n  .injected-text {\n    margin-bottom: -25px;\n    text-align: center;\n  }\n\n  .box {\n    border-style: solid;\n    border-color: black;\n    border-width: 5px;\n    text-align: center;\n  }\n\n  .yellow-box {\n    background-color: yellow;\n    padding: 20px 40px 20px 40px;\n  }\n\n  .red-box {\n    background-color: red;\n    margin: 20px 40px 20px 40px;\n    \n  }\n\n  .green-box {\n    background-color: green;\n    margin: 20px 40px 20px 40px;\n  }\n</style>\n<h5 class="injected-text">margin</h5>\n\n<div class="box yellow-box">\n  <h5 class="box red-box">padding</h5>\n  <h5 class="box green-box">padding</h5>\n</div>',head:"",tail:""},indexjs:null,indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/responsive-web-design/basic-css/style-the-html-body-element",id:"bad82fee1322bd9aedf08721"},slug:"/responsive-web-design/basic-css/understand-absolute-versus-relative-units"}}}});
//# sourceMappingURL=path---responsive-web-design-basic-css-understand-absolute-versus-relative-units-c0daf046124ff6e4d103.js.map