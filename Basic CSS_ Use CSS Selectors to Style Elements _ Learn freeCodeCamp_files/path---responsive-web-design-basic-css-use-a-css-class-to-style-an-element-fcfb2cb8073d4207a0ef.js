webpackJsonp([62623045408783],{4184:function(e,t){e.exports={data:{challengeNode:{title:"Use a CSS Class to Style an Element",description:["Classes are reusable styles that can be added to HTML elements.","Here's an example CSS class declaration:","<blockquote>&#60;style&#62;<br>&nbsp;&nbsp;.blue-text {<br>&nbsp;&nbsp;&nbsp;&nbsp;color: blue;<br>&nbsp;&nbsp;}<br>&#60;/style&#62;</blockquote>","You can see that we've created a CSS class called <code>blue-text</code> within the <code>&#60;style&#62;</code> tag.","You can apply a class to an HTML element like this:",'<code>&#60;h2 class="blue-text"&#62;CatPhotoApp&#60;/h2&#62;</code>',"Note that in your CSS <code>style</code> element, class names start with a period. In your HTML elements' class attribute, the class name does not include the period.","<hr>","Inside your <code>style</code> element, change the <code>h2</code> selector to <code>.red-text</code> and update the color's value from <code>blue</code> to <code>red</code>.","Give your <code>h2</code> element the <code>class</code> attribute with a value of <code>'red-text'</code>."],challengeType:0,fields:{slug:"/responsive-web-design/basic-css/use-a-css-class-to-style-an-element",blockName:"Basic CSS",tests:[{text:"Your <code>h2</code> element should be red.",testString:'assert($("h2").css("color") === "rgb(255, 0, 0)", \'Your <code>h2</code> element should be red.\');'},{text:"Your <code>h2</code> element should have the class <code>red-text</code>.",testString:'assert($("h2").hasClass("red-text"), \'Your <code>h2</code> element should have the class <code>red-text</code>.\');'},{text:"Your stylesheet should declare a <code>red-text</code> class and have its color set to red.",testString:"assert(code.match(/\\.red-text\\s*\\{\\s*color\\s*:\\s*red;\\s*\\}/g), 'Your stylesheet should declare a <code>red-text</code> class and have its color set to red.');"},{text:'Do not use inline style declarations like <code>style="color&#58; red"</code> in your <code>h2</code> element.',testString:'assert($("h2").attr("style") === undefined, \'Do not use inline style declarations like <code>style="color&#58; red"</code> in your <code>h2</code> element.\');'}]},required:[],files:{indexhtml:{key:"indexhtml",ext:"html",name:"index",contents:'<style>\n  h2 {\n    color: blue;\n  }\n</style>\n\n<h2>CatPhotoApp</h2>\n<main>\n  <p>Click here to view more <a href="#">cat photos</a>.</p>\n  \n  <a href="#"><img src="https://bit.ly/fcc-relaxing-cat" alt="A cute orange cat lying on its back."></a>\n  \n  <div>\n    <p>Things cats love:</p>\n    <ul>\n      <li>cat nip</li>\n      <li>laser pointers</li>\n      <li>lasagna</li>\n    </ul>\n    <p>Top 3 things cats hate:</p>\n    <ol>\n      <li>flea treatment</li>\n      <li>thunder</li>\n      <li>other cats</li>\n    </ol>\n  </div>\n  \n  <form action="/submit-cat-photo">\n    <label><input type="radio" name="indoor-outdoor" checked> Indoor</label>\n    <label><input type="radio" name="indoor-outdoor"> Outdoor</label><br>\n    <label><input type="checkbox" name="personality" checked> Loving</label>\n    <label><input type="checkbox" name="personality"> Lazy</label>\n    <label><input type="checkbox" name="personality"> Energetic</label><br>\n    <input type="text" placeholder="cat photo URL" required>\n    <button type="submit">Submit</button>\n  </form>\n</main>',head:"",tail:""},indexjs:null,indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/responsive-web-design/basic-css/style-multiple-elements-with-a-css-class",id:"bad87fee1348bd9aecf08806"},slug:"/responsive-web-design/basic-css/use-a-css-class-to-style-an-element"}}}});
//# sourceMappingURL=path---responsive-web-design-basic-css-use-a-css-class-to-style-an-element-fcfb2cb8073d4207a0ef.js.map